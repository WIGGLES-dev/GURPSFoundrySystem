{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/math-expression-evaluator/src/formula_evaluator.js","webpack:///./node_modules/math-expression-evaluator/src/postfix_evaluator.js","webpack:///./node_modules/math-expression-evaluator/src/postfix.js","webpack:///./node_modules/math-expression-evaluator/src/lexer.js","webpack:///./node_modules/math-expression-evaluator/src/math_function.js","webpack:///./node_modules/gurps-foundry-roll-lib/src/js/Roll/SuccessRoll.js","webpack:///./node_modules/gurps-foundry-roll-lib/src/js/Roll/AbstractRoll.js","webpack:///./node_modules/gurps-foundry-roll-lib/src/js/Renderer/SuccessRollRenderer.js","webpack:///./node_modules/gurps-foundry-roll-lib/src/js/Renderer/AbstractRollRenderer.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Mexp","formulaEval","pop1","pop2","pop3","disp","arr","this","length","type","push","show","pop","postfixEval","UserDefined","PI","Math","E","stack","bool","concat","unshift","console","log","exception","parseFloat","toFixed","eval","str","tokens","obj","lex","toPostfix","elem","popped","prep","pre","ele","post","Number","flag","inc","val","token","eva","math","sin","cos","tan","P","C","asin","acos","atan","floor","cosh","acosh","pow","sqrt","div","fact","tanh","atanh","mod","mul","sinh","asinh","add","sub","sigma","Pi","preced","0","1","2","3","4","5","6","7","8","9","10","11","12","13","type0","type1","type1Asterick","empty","type3Asterick","type6","newAr","match","str1","str2","x","f","addToken","temp","y","indexOf","inp","changeSignObj","changeSign","closingParObj","openingParObj","ptc","inpStr","allowed","bracToClose","asterick","prevKey","undefined","Exception","slice","j","index","cToken","cType","cEv","cPre","cShow","hasDec","parsed","isDegree","a","b","pro","other","choice","toRadian","inverse","low","high","ex","pow10x","e","sum","sinha","cosha","message","_foundryRoll","formula","total","dice","roll","level","trait","modifiers","super","Error","regexMatch","parseInt","Roll","_level","_trait","_modifiers","_evaluatedModifiers","_isSuccess","_marginOfSuccess","_isCritFail","_isCritSuccess","_rolled","marginOfSuccess","renderer","data","evaluatedFormula","parts","foundryDice","map","die","worstFace","_getWorstDieFace","bestFace","_getBestDieFace","faces","rolls","result","classes","constructor","toLowerCase","filter","join","renderTemplate","CONFIG","Dice","tooltip","max","sides","min","options","mergeObject","template","useTooltip","user","game","_id","flavor","_getFormula","getTooltip","_getTotal","round","evaluatedLevel","description","isSuccess","isCritSuccess","isCritFail","Hooks","on","content","render","then","html","ChatMessage","CONST","CHAT_MESSAGE_TYPES","OTHER"],"mappings":"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","file":"gurps-foundry-roll-chatcmd.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","var Mexp=require('./postfix_evaluator.js');\r\nMexp.prototype.formulaEval = function () {\r\n\t\"use strict\";\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1||arr[i].type===3){\r\n\t\t\tdisp.push({value:arr[i].type===3?arr[i].show:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tdisp.push({value:arr[i].show,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tdisp[disp.length-1]={value:arr[i].show+(arr[i].show!=\"-\"?\"(\":\"\")+disp[disp.length-1].value+(arr[i].show!=\"-\"?\")\":\"\"),type:0};\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tdisp[disp.length-1]={value:(disp[disp.length-1].type!=1?\"(\":\"\")+disp[disp.length-1].value+(disp[disp.length-1].type!=1?\")\":\"\")+arr[i].show,type:7};\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tif(arr[i].show==='P'||arr[i].show==='C')disp.push({value:\"<sup>\"+pop2.value+\"</sup>\"+arr[i].show+\"<sub>\"+pop1.value+\"</sub>\",type:10});\r\n\t\t\telse disp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+\"<sup>\"+pop1.value+\"</sup>\",type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tdisp.push({value:(pop2.type!=1?\"(\":\"\")+pop2.value+(pop2.type!=1?\")\":\"\")+arr[i].show+(pop1.type!=1?\"(\":\"\")+pop1.value+(pop1.type!=1?\")\":\"\"),type:arr[i].type});\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=disp.pop();\r\n\t\t\tpop2=disp.pop();\r\n\t\t\tpop3=disp.pop();\r\n\t\t\tdisp.push({value:arr[i].show+\"(\"+pop3.value+\",\"+pop2.value+\",\"+pop1.value+\")\",type:12});\r\n\t\t}\r\n\t}\r\n\treturn disp[0].value;\r\n};\r\nmodule.exports=Mexp;","var Mexp=require('./postfix.js');\r\nMexp.prototype.postfixEval = function (UserDefined) {\r\n\t'use strict';\r\n\tUserDefined=UserDefined||{};\r\n\tUserDefined.PI=Math.PI;\r\n\tUserDefined.E=Math.E;\r\n\tvar stack=[],pop1,pop2,pop3;\r\n\tvar disp=[];\r\n\tvar temp='';\r\n\tvar arr=this.value;\r\n\tvar bool=(typeof UserDefined.n!==\"undefined\");\r\n\tfor(var i=0;i<arr.length;i++){\r\n\t\tif(arr[i].type===1){\r\n\t\t\tstack.push({value:arr[i].value,type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===3){\r\n\t\t\tstack.push({value:UserDefined[arr[i].value],type:1});\r\n\t\t}\r\n\t\telse if(arr[i].type===0){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===7){\r\n\t\t\tif(typeof stack[stack.length-1].type===\"undefined\"){\r\n\t\t\t\tstack[stack.length-1].value.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse stack[stack.length-1].value=arr[i].value(stack[stack.length-1].value);\r\n\t\t}\r\n\t\telse if(arr[i].type===8){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t}\r\n\t\telse if(arr[i].type===10){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n\t\t\t\tpop2.value=pop2.concat(pop1);\r\n\t\t\t\tpop2.value.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n            }\r\n\t\t}\r\n\t\telse if(arr[i].type===2||arr[i].type===9){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tif(typeof pop2.type===\"undefined\"){\r\n                console.log(pop2);\r\n\t\t\t\tpop2=pop2.concat(pop1);\r\n\t\t\t\tpop2.push(arr[i]);\r\n\t\t\t\tstack.push(pop2);\r\n\t\t\t}\r\n\t\t\telse if (typeof pop1.type===\"undefined\") {\r\n\t\t\t\tpop1.unshift(pop2);\r\n\t\t\t\tpop1.push(arr[i]);\r\n\t\t\t\tstack.push(pop1);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tstack.push({type:1,value:arr[i].value(pop2.value,pop1.value)});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(arr[i].type===12){\r\n\t\t\tpop1=stack.pop();\r\n\t\t\tif (typeof pop1.type!==\"undefined\") {\r\n\t\t\t\tpop1=[pop1];\r\n\t\t\t}\r\n\t\t\tpop2=stack.pop();\r\n\t\t\tpop3=stack.pop();\r\n\t\t\tstack.push({type:1,value:arr[i].value(pop3.value,pop2.value,new Mexp(pop1))});\r\n\t\t}\r\n\t\telse if(arr[i].type===13){\r\n\t\t\tif(bool){\r\n\t\t\t\tstack.push({value:UserDefined[arr[i].value],type:3});\r\n\t\t\t}\r\n\t\t\telse stack.push([arr[i]]);\r\n\t\t}\r\n\t}\r\n\tif (stack.length>1) {\r\n\t\tthrow(new Mexp.exception(\"Uncaught Syntax error\"));\r\n\t}\r\n\treturn stack[0].value>1000000000000000?\"Infinity\":parseFloat(stack[0].value.toFixed(15));\r\n};\r\nMexp.eval=function(str,tokens,obj){\r\n\tif (typeof tokens===\"undefined\") {\r\n\t\treturn this.lex(str).toPostfix().postfixEval();\r\n\t}\r\n\telse if (typeof obj===\"undefined\") {\r\n\t\tif (typeof tokens.length!==\"undefined\") \r\n\t\t\treturn this.lex(str,tokens).toPostfix().postfixEval();\r\n\t\telse\r\n\t\t\treturn this.lex(str).toPostfix().postfixEval(tokens);\r\n\t}\r\n\telse\r\n\t\treturn this.lex(str,tokens).toPostfix().postfixEval(obj);\r\n};\r\nmodule.exports=Mexp;","\r\n    var Mexp=require('./lexer.js');\r\n\r\n\tMexp.prototype.toPostfix = function () {\r\n\t\t'use strict';\r\n\t\tvar post=[],elem,popped,prep,pre,ele;\r\n    \tvar stack=[{value:\"(\",type:4,pre:0}];\r\n\t\tvar arr=this.value;\r\n\t\tfor (var i=1; i < arr.length; i++) {\r\n\t\t\tif(arr[i].type===1||arr[i].type===3||arr[i].type===13){\t//if token is number,constant,or n(which is also a special constant in our case)\r\n\t\t\t\tif(arr[i].type===1)\r\n\t\t\t\t\tarr[i].value=Number(arr[i].value);\r\n\t\t\t\tpost.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===4){\r\n\t\t\t\tstack.push(arr[i]);\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===5){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(arr[i].type===11){\r\n\t\t\t\twhile((popped=stack.pop()).type!==4){\r\n\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t}\r\n\t\t\t\tstack.push(popped);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\telem=arr[i];\r\n\t\t\t\tpre=elem.pre;\r\n\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\tprep=ele.pre;\r\n\t\t\t\tvar flag=ele.value=='Math.pow'&&elem.value=='Math.pow';\r\n\t\t\t\tif(pre>prep)stack.push(elem);\r\n\t\t\t\telse {\r\n\t\t\t\t\twhile(prep>=pre&&!flag||flag&&pre<prep){\r\n\t\t\t\t\t\tpopped=stack.pop();\r\n\t\t\t\t\t\tele=stack[stack.length-1];\r\n\t\t\t\t\t\tpost.push(popped);\r\n\t\t\t\t\t\tprep=ele.pre;\r\n\t\t\t\t\t\tflag=elem.value=='Math.pow'&&ele.value=='Math.pow';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack.push(elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Mexp(post);\r\n\t};\r\n    module.exports=Mexp;","var Mexp = require('./math_function.js')\r\nfunction inc (arr, val) {\r\n  for (var i = 0; i < arr.length; i++) {\r\n    arr[i] += val\r\n  }\r\n  return arr\r\n}\r\nvar token = ['sin', 'cos', 'tan', 'pi', '(', ')', 'P', 'C',\r\n  'asin', 'acos', 'atan', '7', '8', '9', 'int',\r\n  'cosh', 'acosh', 'ln', '^', 'root', '4', '5', '6', '/', '!',\r\n  'tanh', 'atanh', 'Mod', '1', '2', '3', '*',\r\n  'sinh', 'asinh', 'e', 'log', '0', '.', '+', '-', ',', 'Sigma', 'n', 'Pi', 'pow']\r\nvar show = ['sin', 'cos', 'tan', '&pi;', '(', ')', 'P', 'C',\r\n  'asin', 'acos', 'atan', '7', '8', '9', 'Int',\r\n  'cosh', 'acosh', ' ln', '^', 'root', '4', '5', '6', '&divide;', '!',\r\n  'tanh', 'atanh', ' Mod ', '1', '2', '3', '&times;',\r\n  'sinh', 'asinh', 'e', ' log', '0', '.', '+', '-', ',', '&Sigma;', 'n', '&Pi;', 'pow']\r\nvar eva = [Mexp.math.sin, Mexp.math.cos, Mexp.math.tan, 'PI', '(', ')', Mexp.math.P, Mexp.math.C,\r\n  Mexp.math.asin, Mexp.math.acos, Mexp.math.atan, '7', '8', '9', Math.floor,\r\n  Mexp.math.cosh, Mexp.math.acosh, Math.log, Math.pow, Math.sqrt, '4', '5', '6', Mexp.math.div, Mexp.math.fact,\r\n  Mexp.math.tanh, Mexp.math.atanh, Mexp.math.mod, '1', '2', '3', Mexp.math.mul,\r\n  Mexp.math.sinh, Mexp.math.asinh, 'E', Mexp.math.log, '0', '.', Mexp.math.add, Mexp.math.sub, ',', Mexp.math.sigma, 'n', Mexp.math.Pi, Math.pow]\r\nvar preced = {\r\n  0: 11,\r\n  1: 0,\r\n  2: 3,\r\n  3: 0,\r\n  4: 0,\r\n  5: 0,\r\n  6: 0,\r\n  7: 11,\r\n  8: 11,\r\n  9: 1,\r\n  10: 10,\r\n  11: 0,\r\n  12: 11,\r\n  13: 0\r\n} // stores precedence by types\r\nvar type = [0, 0, 0, 3, 4, 5, 10, 10,\r\n  0, 0, 0, 1, 1, 1, 0,\r\n  0, 0, 0, 10, 0, 1, 1, 1, 2, 7,\r\n  0, 0, 2, 1, 1, 1, 2,\r\n  0, 0, 3, 0, 1, 6, 9, 9, 11, 12, 13, 12, 8]\r\n/*\r\n0 : function with syntax function_name(Maths_exp)\r\n1 : numbers\r\n2 : binary operators like * / Mod left associate and same precedence\r\n3 : Math constant values like e,pi,Cruncher ans\r\n4 : opening bracket\r\n5 : closing bracket\r\n6 : decimal\r\n7 : function with syntax (Math_exp)function_name\r\n8: function with syntax function_name(Math_exp1,Math_exp2)\r\n9 : binary operator like +,-\r\n10: binary operator like P C or ^\r\n11: ,\r\n12: function with , seperated three parameters\r\n13: variable of Sigma function\r\n*/\r\nvar type0 = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  9: true,\r\n  12: true,\r\n  13: true\r\n} // type2:true,type4:true,type9:true,type11:true,type21:true,type22\r\nvar type1 = {\r\n  0: true,\r\n  1: true,\r\n  2: true,\r\n  3: true,\r\n  4: true,\r\n  5: true,\r\n  6: true,\r\n  7: true,\r\n  8: true,\r\n  9: true,\r\n  10: true,\r\n  11: true,\r\n  12: true,\r\n  13: true\r\n} // type3:true,type5:true,type7:true,type23\r\nvar type1Asterick = {\r\n  0: true,\r\n  3: true,\r\n  4: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n}\r\nvar empty = {}\r\nvar type3Asterick = {\r\n  0: true,\r\n  1: true,\r\n  3: true,\r\n  4: true,\r\n  6: true,\r\n  8: true,\r\n  12: true,\r\n  13: true\r\n} // type_5:true,type_7:true,type_23\r\nvar type6 = {\r\n  1: true\r\n}\r\nvar newAr = [\r\n  [],\r\n  ['1', '2', '3', '7', '8', '9', '4', '5', '6', '+', '-', '*', '/', '(', ')', '^', '!', 'P', 'C', 'e', '0', '.', ',', 'n'],\r\n  ['pi', 'ln', 'Pi'],\r\n  ['sin', 'cos', 'tan', 'Del', 'int', 'Mod', 'log', 'pow'],\r\n  ['asin', 'acos', 'atan', 'cosh', 'root', 'tanh', 'sinh'],\r\n  ['acosh', 'atanh', 'asinh', 'Sigma']\r\n]\r\n\r\nfunction match (str1, str2, i, x) {\r\n  for (var f = 0; f < x; f++) {\r\n    if (str1[i + f] !== str2[f]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\nMexp.addToken = function (tokens) {\r\n  for (var i = 0; i < tokens.length; i++) {\r\n    var x = tokens[i].token.length\r\n    var temp = -1\r\n\r\n    // newAr is a specially designed data structure index of 1d array = length of tokens\r\n\r\n    if (x < newAr.length) { // match to check if token is really huge and not existing\r\n    // if not checked it will break in next line as undefined index\r\n      for (var y = 0; y < newAr[x].length; y++) {\r\n        if (tokens[i].token === newAr[x][y]) {\r\n          temp = token.indexOf(newAr[x][y])\r\n          break\r\n        }\r\n      }\r\n    }\r\n    if (temp === -1) {\r\n      token.push(tokens[i].token)\r\n      type.push(tokens[i].type)\r\n      if (newAr.length <= tokens[i].token.length) {\r\n        newAr[tokens[i].token.length] = []\r\n      }\r\n      newAr[tokens[i].token.length].push(tokens[i].token)\r\n      eva.push(tokens[i].value)\r\n      show.push(tokens[i].show)\r\n    } else {\r\n      token[temp] = tokens[i].token\r\n      type[temp] = tokens[i].type\r\n      eva[temp] = tokens[i].value\r\n      show[temp] = tokens[i].show\r\n    }\r\n  }\r\n}\r\nMexp.lex = function (inp, tokens) {\r\n  'use strict'\r\n  var changeSignObj = {\r\n    value: Mexp.math.changeSign,\r\n    type: 0,\r\n    pre: 21,\r\n    show: '-'\r\n  }\r\n  var closingParObj = {\r\n    value: ')',\r\n    show: ')',\r\n    type: 5,\r\n    pre: 0\r\n  }\r\n  var openingParObj = {\r\n    value: '(',\r\n    type: 4,\r\n    pre: 0,\r\n    show: '('\r\n  }\r\n  var str = [openingParObj]\r\n  var ptc = [] // Parenthesis to close at the beginning is after one token\r\n  var inpStr = inp\r\n  var key\r\n  var allowed = type0\r\n  var bracToClose = 0\r\n  var asterick = empty\r\n  var prevKey = ''\r\n  var i, x, y\r\n  if (typeof tokens !== 'undefined') {\r\n    Mexp.addToken(tokens)\r\n  }\r\n  var obj = {}\r\n  for (i = 0; i < inpStr.length; i++) {\r\n    if (inpStr[i] === ' ') {\r\n      continue\r\n    }\r\n    key = ''\r\n    for (x = (inpStr.length - i > (newAr.length - 2) ? newAr.length - 1 : inpStr.length - i); x > 0; x--) {\r\n      if (newAr[x] === undefined) continue;\r\n      for (y = 0; y < newAr[x].length; y++) {\r\n        if (match(inpStr, newAr[x][y], i, x)) {\r\n          key = newAr[x][y]\r\n          y = newAr[x].length\r\n          x = 0\r\n        }\r\n      }\r\n    }\r\n    i += key.length - 1\r\n    if (key === '') {\r\n      throw (new Mexp.Exception('Can\\'t understand after ' + inpStr.slice(i)))\r\n    }\r\n    var index = token.indexOf(key)\r\n    var cToken = key\r\n    var cType = type[index]\r\n    var cEv = eva[index]\r\n    var cPre = preced[cType]\r\n    var cShow = show[index]\r\n    var pre = str[str.length - 1]\r\n    var j\r\n    for (j = ptc.length; j--;) { // loop over ptc\r\n      if (ptc[j] === 0) {\r\n        if ([0, 2, 3, 4, 5, 9, 11, 12, 13].indexOf(cType) !== -1) {\r\n          if (allowed[cType] !== true) {\r\n            throw (new Mexp.Exception(key + ' is not allowed after ' + prevKey))\r\n          }\r\n          str.push(closingParObj)\r\n          allowed = type1\r\n          asterick = type3Asterick\r\n          inc(ptc, -1).pop()\r\n        }\r\n      } else break\r\n    }\r\n    if (allowed[cType] !== true) {\r\n      throw (new Mexp.Exception(key + ' is not allowed after ' + prevKey))\r\n    }\r\n    if (asterick[cType] === true) {\r\n      cType = 2\r\n      cEv = Mexp.math.mul\r\n      cShow = '&times;'\r\n      cPre = 3\r\n      i = i - key.length\r\n    }\r\n    obj = {\r\n      value: cEv,\r\n      type: cType,\r\n      pre: cPre,\r\n      show: cShow\r\n    }\r\n    if (cType === 0) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2).push(2)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 1) {\r\n      if (pre.type === 1) {\r\n        pre.value += cEv\r\n        inc(ptc, 1)\r\n      } else {\r\n        str.push(obj)\r\n      }\r\n      allowed = type1\r\n      asterick = type1Asterick\r\n    } else if (cType === 2) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 3) { // constant\r\n      str.push(obj)\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n    } else if (cType === 4) {\r\n      inc(ptc, 1)\r\n      bracToClose++\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 5) {\r\n      if (!bracToClose) {\r\n        throw (new Mexp.Exception('Closing parenthesis are more than opening one, wait What!!!'))\r\n      }\r\n      bracToClose--\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n    } else if (cType === 6) {\r\n      if (pre.hasDec) {\r\n        throw (new Mexp.Exception('Two decimals are not allowed in one number'))\r\n      }\r\n      if (pre.type !== 1) {\r\n        pre = {\r\n          value: 0,\r\n          type: 1,\r\n          pre: 0\r\n        } // pre needs to be changed as it will the last value now to be safe in later code\r\n        str.push(pre)\r\n        inc(ptc, -1)\r\n      }\r\n      allowed = type6\r\n      inc(ptc, 1)\r\n      asterick = empty\r\n      pre.value += cEv\r\n      pre.hasDec = true\r\n    } else if (cType === 7) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      inc(ptc, 1)\r\n      str.push(obj)\r\n    }\r\n    if (cType === 8) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 4).push(4)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 9) {\r\n      if (pre.type === 9) {\r\n        if (pre.value === Mexp.math.add) {\r\n          pre.value = cEv\r\n          pre.show = cShow\r\n          inc(ptc, 1)\r\n        } else if (pre.value === Mexp.math.sub && cShow === '-') {\r\n          pre.value = Mexp.math.add\r\n          pre.show = '+'\r\n          inc(ptc, 1)\r\n        }\r\n      } else if (pre.type !== 5 && pre.type !== 7 && pre.type !== 1 && pre.type !== 3 && pre.type !== 13) { // changesign only when negative is found\r\n        if (cToken === '-') { // do nothing for + token\r\n          // don't add with the above if statement as that will run the else statement of parent if on Ctoken +\r\n          allowed = type0\r\n          asterick = empty\r\n          inc(ptc, 2).push(2)\r\n          str.push(changeSignObj)\r\n          str.push(openingParObj)\r\n        }\r\n      } else {\r\n        str.push(obj)\r\n        inc(ptc, 2)\r\n      }\r\n      allowed = type0\r\n      asterick = empty\r\n    } else if (cType === 10) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 2)\r\n      str.push(obj)\r\n    } else if (cType === 11) {\r\n      allowed = type0\r\n      asterick = empty\r\n      str.push(obj)\r\n    } else if (cType === 12) {\r\n      allowed = type0\r\n      asterick = empty\r\n      inc(ptc, 6).push(6)\r\n      str.push(obj)\r\n      str.push(openingParObj)\r\n    } else if (cType === 13) {\r\n      allowed = type1\r\n      asterick = type3Asterick\r\n      str.push(obj)\r\n    }\r\n    inc(ptc, -1)\r\n    prevKey = key\r\n  }\r\n  for (j = ptc.length; j--;) { // loop over ptc\r\n    if (ptc[j] === 0) {\r\n      str.push(closingParObj)\r\n      inc(ptc, -1).pop()\r\n    } else break  // if it is not zero so before ptc also cant be zero\r\n  }\r\n  if (allowed[5] !== true) {\r\n    throw (new Mexp.Exception('complete the expression'))\r\n  }\r\n  while (bracToClose--) {\r\n    str.push(closingParObj)\r\n  }\r\n\r\n  str.push(closingParObj)\r\n  //        console.log(str);\r\n  return new Mexp(str)\r\n}\r\nmodule.exports = Mexp\r\n","var Mexp = function (parsed) {\r\n  this.value = parsed\r\n}\r\n\r\nMexp.math = {\r\n  isDegree: true, // mode of calculator\r\n  acos: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.acos(x) : Math.acos(x))\r\n  },\r\n  add: function (a, b) {\r\n    return a + b\r\n  },\r\n  asin: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.asin(x) : Math.asin(x))\r\n  },\r\n  atan: function (x) {\r\n    return (Mexp.math.isDegree ? 180 / Math.PI * Math.atan(x) : Math.atan(x))\r\n  },\r\n  acosh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x - 1))\r\n  },\r\n  asinh: function (x) {\r\n    return Math.log(x + Math.sqrt(x * x + 1))\r\n  },\r\n  atanh: function (x) {\r\n    return Math.log((1 + x) / (1 - x))\r\n  },\r\n  C: function (n, r) {\r\n    var pro = 1\r\n    var other = n - r\r\n    var choice = r\r\n    if (choice < other) {\r\n      choice = other\r\n      other = r\r\n    }\r\n    for (var i = choice + 1; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro / Mexp.math.fact(other)\r\n  },\r\n  changeSign: function (x) {\r\n    return -x\r\n  },\r\n  cos: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.cos(x)\r\n  },\r\n  cosh: function (x) {\r\n    return (Math.pow(Math.E, x) + Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  div: function (a, b) {\r\n    return a / b\r\n  },\r\n  fact: function (n) {\r\n    if (n % 1 !== 0) return 'NaN'\r\n    var pro = 1\r\n    for (var i = 2; i <= n; i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  inverse: function (x) {\r\n    return 1 / x\r\n  },\r\n  log: function (i) {\r\n    return Math.log(i) / Math.log(10)\r\n  },\r\n  mod: function (a, b) {\r\n    return a % b\r\n  },\r\n  mul: function (a, b) {\r\n    return a * b\r\n  },\r\n  P: function (n, r) {\r\n    var pro = 1\r\n    for (var i = Math.floor(n) - Math.floor(r) + 1; i <= Math.floor(n); i++) {\r\n      pro *= i\r\n    }\r\n    return pro\r\n  },\r\n  Pi: function (low, high, ex) {\r\n    var pro = 1\r\n    for (var i = low; i <= high; i++) {\r\n      pro *= Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return pro\r\n  },\r\n  pow10x: function (e) {\r\n    var x = 1\r\n    while (e--) {\r\n      x *= 10\r\n    }\r\n    return x\r\n  },\r\n  sigma: function (low, high, ex) {\r\n    var sum = 0\r\n    for (var i = low; i <= high; i++) {\r\n      sum += Number(ex.postfixEval({\r\n        n: i\r\n      }))\r\n    }\r\n    return sum\r\n  },\r\n  sin: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.sin(x)\r\n  },\r\n  sinh: function (x) {\r\n    return (Math.pow(Math.E, x) - Math.pow(Math.E, -1 * x)) / 2\r\n  },\r\n  sub: function (a, b) {\r\n    return a - b\r\n  },\r\n  tan: function (x) {\r\n    if (Mexp.math.isDegree) x = Mexp.math.toRadian(x)\r\n    return Math.tan(x)\r\n  },\r\n  tanh: function (x) {\r\n    return Mexp.sinha(x) / Mexp.cosha(x)\r\n  },\r\n  toRadian: function (x) {\r\n    return x * Math.PI / 180\r\n  }\r\n}\r\nMexp.Exception = function (message) {\r\n  this.message = message\r\n}\r\nmodule.exports = Mexp\r\n","import AbstractRoll from './AbstractRoll.js';\r\nimport mexp from 'math-expression-evaluator';\r\n\r\n/**\r\n * Class representing a success roll.\r\n *\r\n * @extends AbstractRoll\r\n * @hideconstructor\r\n * @inheritDoc\r\n * @public\r\n */\r\nexport default class SuccessRoll extends AbstractRoll {\r\n    /**\r\n     * Create a success roll object by parsing a formula based on the notation for skill levels published on sample characters in some GURPS supplements.\r\n     *\r\n     * @public\r\n     * @param {String} formula Must include the target number to be rolled against. Can also optionally include the name of the ability being rolled against and any +/- modifiers. Accepted format is [&lt;ability name&gt;-]&lt;level&gt;[&lt;modifiers&gt;]. The ability name must start with a letter but can otherwise contain any character except line breaks and the - character, which if the ability name is passed must be used between the ability name and level. The optional list of modifiers may contain one or more modifiers supplied in +X or -Y form; optional spaces are allowed between the modifiers as well as between them and the +/- signs, but no other characters are allowed and every numeric modifier must have either a + or - sign preceding it.\r\n     * @returns {SuccessRoll}\r\n     *\r\n     * @example\r\n     * // Roll against 11\r\n     * SuccessRoll.fromFormula('11')\r\n     *\r\n     * // Roll against 11 modified by -4 and +1\r\n     * SuccessRoll.fromFormula('11-4+1')\r\n     *\r\n     * // Roll against the Stealth skill at level 12\r\n     * SuccessRoll.fromFormula('Stealth-12')\r\n     *\r\n     * // Roll against ST 10 with a bonus of +3 and a penalty of -2 to the roll\r\n     * SuccessRoll.fromFormula('ST-10 +3 -2')\r\n     */\r\n    static fromFormula(formula) {\r\n        return new SuccessRoll({ formula });\r\n    }\r\n\r\n    /**\r\n     * Creates a success roll object from structured data.\r\n     *\r\n     * @public\r\n     * @param {Object} data\r\n     * @param {Number} data.level Level of the trait to roll against\r\n     * @param {String|null} data.trait Name of the trait being rolled\r\n     * @param {String|null} data.modifiers Various modifiers to apply to the roll supplied in +X or -Y form. Optional spaces are allowed between the modifiers as well as between them and the +/- signs, but no other characters are allowed and every numeric modifier must have either a + or - sign preceding it.\r\n     * @returns {SuccessRoll}\r\n     *\r\n     * @example\r\n     * // Roll against the Stealth skill at level 12\r\n     * SuccessRoll.fromData({ level: 12, trait: 'Stealth' })\r\n     *\r\n     * // Roll against ST 10 with a bonus of +3 and a penalty of -2 to the roll\r\n     * SuccessRoll.fromData({ level: 10, trait: 'ST', modifiers: ' +3 -2' })\r\n     *\r\n     * // Roll against 11\r\n     * SuccessRoll.fromData({ level: 11 })\r\n     *\r\n     * // Roll against 11 modified by -4 and +1\r\n     * SuccessRoll.fromData({ level: 11, modifiers: '-4+1' })\r\n     */\r\n    static fromData({ level, trait = null, modifiers = null }) {\r\n        return new SuccessRoll({ level, trait, modifiers });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param {Number} level Level of the trait to roll against\r\n     * @param {String} trait Name of the trait being rolled\r\n     * @param {String} modifiers Various +/- modifiers to apply to the roll\r\n     * @param {String} formula Success roll formula to be parsed, this can be passed instead of the previous three parameters\r\n     */\r\n    constructor({ level = null, trait = null, formula = null, modifiers = null }) {\r\n        super();\r\n\r\n        if (formula === null && level === null) {\r\n            throw new Error('Attempted to create a SuccessRoll with both level and formula equal to null; at least one of them must be non-null!');\r\n        }\r\n\r\n        if (formula !== null) {\r\n            const regexMatch = (formula + '').match(/^(([a-zA-Z][^-\\r\\n\\f\\0]*)-)?( *\\d+)(( *[+-] *[0-9]+)*)$/);\r\n            if (regexMatch === null) {\r\n                throw new Error(\r\n                    `Can't parse SuccessRoll formula '${formula}' - it must adhere to the following format: [<trait name beginning with a letter and containing no - signs>-]<level>[<numeric modifiers including the + and - signs, and optionally spaces>]`\r\n                );\r\n            }\r\n\r\n            trait = regexMatch[2] || null;\r\n            level = parseInt(regexMatch[3], 10);\r\n            modifiers = regexMatch[4] || null;\r\n        }\r\n\r\n        this._foundryRoll = new Roll('3d6');\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @protected\r\n         */\r\n        this._level = level;\r\n\r\n        /**\r\n         * @type {String|null}\r\n         * @protected\r\n         */\r\n        this._trait = trait;\r\n\r\n        /**\r\n         * @type {String|null}\r\n         * @protected\r\n         */\r\n        this._modifiers = modifiers;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @protected\r\n         */\r\n        this._evaluatedModifiers = modifiers ? mexp.eval(modifiers) : 0;\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @protected\r\n         */\r\n        this._isSuccess = null;\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @protected\r\n         */\r\n        this._marginOfSuccess = null;\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @protected\r\n         */\r\n        this._isCritFail = false;\r\n\r\n        /**\r\n         * @type {Boolean}\r\n         * @protected\r\n         */\r\n        this._isCritSuccess = false;\r\n    }\r\n\r\n    /**\r\n     * Level of the trait being rolled against. This does not include any modifiers supplied to the roll.\r\n     *\r\n     * @public\r\n     * @type {Number}\r\n     */\r\n    get level() {\r\n        return this._level;\r\n    }\r\n\r\n    /**\r\n     * Name of the trait being rolled against\r\n     *\r\n     * @public\r\n     * @type {String|null}\r\n     */\r\n    get trait() {\r\n        return this._trait;\r\n    }\r\n\r\n    /**\r\n     * Modifiers applied to the success roll\r\n     *\r\n     * @public\r\n     * @type {String|null}\r\n     */\r\n    get modifiers() {\r\n        return this._modifiers;\r\n    }\r\n\r\n    /**\r\n     * Effective level of the trait being rolled against after taking into account all of the modifiers\r\n     *\r\n     * @public\r\n     * @type {Number}\r\n     */\r\n    get evaluatedLevel() {\r\n        return this.level + this._evaluatedModifiers;\r\n    }\r\n\r\n    /**\r\n     * Null if the roll hasn't been made yet.\r\n     *\r\n     * @public\r\n     * @type {boolean|null}\r\n     */\r\n    get isSuccess() {\r\n        if (!this._foundryRoll._rolled) {\r\n            return null;\r\n        }\r\n\r\n        return this._isSuccess;\r\n    }\r\n\r\n    /**\r\n     * Null if the roll hasn't been made yet.\r\n     *\r\n     * @public\r\n     * @type {Number|null}\r\n     */\r\n    get marginOfSuccess() {\r\n        if (!this._foundryRoll._rolled) {\r\n            return null;\r\n        }\r\n\r\n        return this._marginOfSuccess;\r\n    }\r\n\r\n    /**\r\n     * Null if the roll hasn't been made yet.\r\n     *\r\n     * @public\r\n     * @type {null|boolean}\r\n     */\r\n    get isCritFail() {\r\n        if (!this._foundryRoll._rolled) {\r\n            return null;\r\n        }\r\n\r\n        return this._isCritFail;\r\n    }\r\n\r\n    /**\r\n     * Null if the roll hasn't been made yet.\r\n     *\r\n     * @public\r\n     * @type {null|boolean}\r\n     */\r\n    get isCritSuccess() {\r\n        if (!this._foundryRoll._rolled) {\r\n            return null;\r\n        }\r\n\r\n        return this._isCritSuccess;\r\n    }\r\n\r\n    /**\r\n     * Makes the roll\r\n     *\r\n     * @public\r\n     * @returns {SuccessRoll} Self\r\n     */\r\n    roll() {\r\n        super.roll();\r\n\r\n        this._marginOfSuccess = this.level - this.total + this._evaluatedModifiers;\r\n\r\n        this._isSuccess = this._marginOfSuccess >= 0;\r\n\r\n        if (this.total <= 4 || (this.total <= 6 && this.marginOfSuccess >= 10)) {\r\n            this._isCritSuccess = true;\r\n            this._isSuccess = true;\r\n        }\r\n\r\n        if (this.total === 17) {\r\n            this._isSuccess = false;\r\n        }\r\n\r\n        if (this.total === 18 || (this.total === 17 && this.level + this._evaluatedModifiers <= 15) || this.marginOfSuccess <= -10) {\r\n            this._isCritFail = true;\r\n            this._isSuccess = false;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n","/**\r\n * Abstract class representing a dice roll to be extended for specific roll purposes.\r\n *\r\n * @abstract\r\n * @public\r\n * @hideconstructor\r\n */\r\nexport default class AbstractRoll {\r\n    /**\r\n     * @protected\r\n     */\r\n    constructor() {\r\n        /**\r\n         * @type {Roll}\r\n         * @protected\r\n         */\r\n        this._foundryRoll = null;\r\n    }\r\n\r\n    /**\r\n     * Evaluated roll formula expressed as XdY+Z\r\n     *\r\n     * @public\r\n     * @type {string}\r\n     */\r\n    get evaluatedFormula() {\r\n        return this._foundryRoll.formula;\r\n    }\r\n\r\n    /**\r\n     * Roll result. Null if the roll hasn't been made yet.\r\n     *\r\n     * @public\r\n     * @type {Number|null}\r\n     */\r\n    get total() {\r\n        return this._foundryRoll.total;\r\n    }\r\n\r\n    /**\r\n     * Foundry dice data\r\n     *\r\n     * @public\r\n     * @type {Array.<Die>}\r\n     */\r\n    get foundryDice() {\r\n        return this._foundryRoll.dice;\r\n    }\r\n\r\n    /**\r\n     * Makes the roll\r\n     *\r\n     * @public\r\n     * @returns {AbstractRoll} Self\r\n     */\r\n    roll() {\r\n        this._foundryRoll.roll();\r\n        return this;\r\n    }\r\n}\r\n","import AbstractRollRenderer from './AbstractRollRenderer.js';\r\n\r\n/**\r\n * Class used for rendering success rolls.\r\n *\r\n * @extends AbstractRollRenderer\r\n * @inheritDoc\r\n * @public\r\n */\r\nexport default class SuccessRollRenderer extends AbstractRollRenderer {\r\n    /**\r\n     * Returns the face of the passed die that is considered the best possible result to be rolled. For success rolls, this is the lowest face.\r\n     *\r\n     * @protected\r\n     * @param {Die} die\r\n     * @returns {number}\r\n     */\r\n    _getBestDieFace(die) {\r\n        return Math.min(...die.sides);\r\n    }\r\n\r\n    /**\r\n     * Returns the face of the passed die that is considered the worst possible result to be rolled. For success rolls, this is the highest face.\r\n     *\r\n     * @protected\r\n     * @param {Die} die\r\n     * @returns {number}\r\n     */\r\n    _getWorstDieFace(die) {\r\n        return Math.max(...die.sides);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @param {SuccessRoll} roll\r\n     * @returns {string|null}\r\n     */\r\n    _getFormula(roll) {\r\n        let formula = roll.trait ? `${roll.trait}-` : 'Rolled against ';\r\n        formula = `${formula}${roll.level}`;\r\n        if (roll.modifiers !== null) {\r\n            formula = `${formula}${roll.modifiers}<b style=\"padding-left: 10px\">= ${roll.evaluatedLevel}</b>`;\r\n        }\r\n\r\n        return formula;\r\n    }\r\n\r\n    /**\r\n     * @param {SuccessRoll} roll\r\n     * @returns {String}\r\n     * @protected\r\n     */\r\n    _getTotal(roll) {\r\n        let description = roll.isSuccess ? 'Success' : 'Failure';\r\n\r\n        if (roll.isCritSuccess || roll.isCritFail) {\r\n            const color = roll.isCritSuccess ? '#008800' : '#DD0000';\r\n            description = `<b style=\"color:${color}\">Critical ${description}</b>`;\r\n        }\r\n\r\n        return `${description} by ${roll.isSuccess ? roll.marginOfSuccess : -roll.marginOfSuccess}`;\r\n    }\r\n}\r\n","/**\r\n * Abstract class containing the core roll rendering functionality. Extended by classes intended to render specific types of rolls.\r\n *\r\n * @abstract\r\n * @public\r\n */\r\nexport default class AbstractRollRenderer {\r\n    /**\r\n     * A port of the Foundry API Roll::getTooltip method. Renders the roll \"tooltip\" displaying the result of each individual die.\r\n     *\r\n     * @public\r\n     * @param {AbstractRoll} roll\r\n     * @return {Promise.<HTMLElement>} Promise that resolves to HTML representing the tooltip that is toggled when the roll formula is clicked on the rendered roll. The tooltip displays the rolled value of each die in the roll.\r\n     */\r\n    getTooltip(roll) {\r\n        const renderer = this;\r\n        const data = {\r\n            formula: roll.evaluatedFormula,\r\n            total: roll.total,\r\n            parts: roll.foundryDice.map((die) => {\r\n                const worstFace = renderer._getWorstDieFace(die),\r\n                    bestFace = renderer._getBestDieFace(die);\r\n\r\n                return {\r\n                    formula: die.formula,\r\n                    total: die.total,\r\n                    faces: die.faces,\r\n                    rolls: die.rolls.map((roll) => {\r\n                        return {\r\n                            result: roll.roll,\r\n                            classes: [\r\n                                die.constructor.name.toLowerCase(),\r\n                                'd' + die.faces,\r\n                                roll.roll === worstFace ? 'min' : null,\r\n                                roll.roll === bestFace ? 'max' : null,\r\n                            ]\r\n                                .filter((c) => c)\r\n                                .join(' '),\r\n                        };\r\n                    }),\r\n                };\r\n            }),\r\n        };\r\n\r\n        return renderTemplate(CONFIG.Dice.tooltip, data);\r\n    }\r\n\r\n    /**\r\n     * Returns the face of the passed die that is considered the best possible result to be rolled.\r\n     *\r\n     * @protected\r\n     * @param {Die} die\r\n     * @returns {number}\r\n     */\r\n    _getBestDieFace(die) {\r\n        return Math.max(...die.sides);\r\n    }\r\n\r\n    /**\r\n     * Returns the face of the passed die that is considered the worst possible result to be rolled.\r\n     *\r\n     * @protected\r\n     * @param {Die} die\r\n     * @returns {number}\r\n     */\r\n    _getWorstDieFace(die) {\r\n        return Math.min(...die.sides);\r\n    }\r\n\r\n    /**\r\n     * A port of the Foundry API Roll::render method. If no data and no custom template is supplied, data extracted from the passed roll object will be rendered through the `modules/GURPS-Foundry-Roll-Templates/templates/roll.html` (requiring the GURPS Foundry Roll Templates module to be installed). This template is a copy of the default Foundry roll template but with all of the fields able to render HTML.\r\n     *\r\n     * @public\r\n     * @param {AbstractRoll} roll\r\n     * @param {Object} options An object configuring the behavior of the rendered chat message.\r\n     * @param {boolean} options.useTooltip If set to true and using the default template, clicking on the formula in the rendered roll will show a tooltip containing whatever HTML is passed under data.tooltip. If data.tooltip is not passed, the getTooltip method will be used to render the tooltip. Defaults to true.\r\n     * @param {string} options.template Path to the template to render the roll with. This is a path relative from the Foundry VTT data folder. Defaults to `modules/GURPS-Foundry-Roll-Templates/templates/roll.html`.\r\n     * @param {Object} data Object containing data to be rendered in the template. If no data is passed, default data is taken from the roll. The following properties are used by the default rendering template:\r\n     * @param {String} data.user The id of the user who should be displayed as the message sender. Defaults to `game.user._id`.\r\n     * @param {String} data.flavor Flavor text to be displayed above the roll. Defaults to null.\r\n     * @param {String} data.formula Roll formula to display. Defaults to a value determined by a concrete renderer class.\r\n     * @param {String} data.tooltip The tooltip to display when the roll formula is clicked in the rendered message. Defaults to HTML generated by the getTooltip method, and will only be shown if options.useTooltip is set to true.\r\n     * @param {String} data.total The result of the roll to display. Defaults to a value determined by a concrete renderer class.\r\n     * @return {Promise.<HTMLElement>}  A Promise which resolves to the rendered HTML representation of the roll\r\n     */\r\n    async render(roll, options = {}, data = {}) {\r\n        options = mergeObject(\r\n            {\r\n                template: 'modules/GURPS-Foundry-Roll-Templates/templates/roll.html',\r\n                useTooltip: true,\r\n            },\r\n            options\r\n        );\r\n\r\n        data = mergeObject(\r\n            {\r\n                user: game.user._id,\r\n                flavor: null,\r\n                formula: this._getFormula(roll),\r\n                tooltip: options.useTooltip ? await this.getTooltip(roll) : '',\r\n                total: this._getTotal(roll),\r\n            },\r\n            data\r\n        );\r\n\r\n        // Render the roll display template\r\n        return renderTemplate(options.template, data);\r\n    }\r\n\r\n    /**\r\n     * Returns the formula which should be displayed for the roll, based on roll data.\r\n     *\r\n     * @protected\r\n     * @param {AbstractRoll} roll\r\n     * @returns {string}\r\n     */\r\n    _getFormula(roll) {\r\n        return roll.evaluatedFormula;\r\n    }\r\n\r\n    /**\r\n     * Returns the result of the roll to display, based on roll data.\r\n     *\r\n     * @protected\r\n     * @param {AbstractRoll} roll\r\n     * @returns {Number}\r\n     */\r\n    _getTotal(roll) {\r\n        return Math.round(roll.total * 100) / 100;\r\n    }\r\n}\r\n","import SuccessRoll from \"gurps-foundry-roll-lib/src/js/Roll/SuccessRoll\";\r\nimport SuccessRollRenderer from \"gurps-foundry-roll-lib/src/js/Renderer/SuccessRollRenderer\";\r\n\r\nHooks.on('chatMessage', (log, content, data) => {\r\n    if (content.indexOf('!sr') === 0) {\r\n        let roll = new SuccessRoll({ level: 10, trait: 'Stealth' });\r\n        roll.roll();\r\n        let renderer = new SuccessRollRenderer();\r\n\r\n        renderer.render(roll).then((html) => {\r\n            ChatMessage.create({ content: html, user: game.user._id, type: CONST.CHAT_MESSAGE_TYPES.OTHER });\r\n        });\r\n        return false;\r\n    }\r\n});\r\n"],"sourceRoot":""}